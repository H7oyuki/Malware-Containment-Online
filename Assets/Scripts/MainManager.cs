using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class MainManager : MonoBehaviour
{
    public GameObject ImagePop;
    public GameObject ImageCommand;
    public GameObject ButtonAction;
    public GameObject ButtonNext;
    public GameObject Notification;

    int start = 1;
    int end = 10;
    int[] randomcard = new int[10];
    string[] card = new string[10];

    List<int> numbers = new List<int>();

    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {

    }

    //行動ボタンの非表示
    public void DeleteButtonAction()
    {
        ButtonAction.SetActive(false);
    }

    //ターン終了ボタンの非表示とターン処理
    public void DeleteButtonNext()
    {
        ButtonNext.SetActive(false);
        Debug.Log("ターン終了しました。");

    }

    //ポップアップの表示、非表示
    public void PushPopUpButton()
    {
        ImagePop.SetActive(true);
    }

    public void PushBackPopUpButton()
    {
        ImagePop.SetActive(false);
    }

    //行動選択のポップアップ表示、非表示
    public void PushCommandButton()
    {
        ImageCommand.SetActive(true);
    }

    public void PushBackCommandButton()
    {
        ImageCommand.SetActive(false);
    }

    //ホーム画面に戻る
    public void PushBackButton()
    {
        SceneManager.LoadScene("Launcher");
    }

    //行動ボタン内の処理

    //Nの初期位置(仮)
    int n = 0;

    //時計回りに部署移動
    public void MoveRight()
    {

        if (n == 0)
        {
            Notification.transform.localPosition = new Vector3(381.2f, 265.4f, 0);
            Debug.Log("経理部に移動しました。");
            n = 1;
        }
        else if (n == 1)
        {
            Notification.transform.localPosition = new Vector3(381.2f, -35.4f, 0);
            Debug.Log("営業部に移動しました。");
            n = 2;
        }else if (n == 2)
        {
            Notification.transform.localPosition = new Vector3(-900.0f, -35.4f, 0);
            Debug.Log("サービス室に移動しました。");
            n = 3;
        }
        else if (n == 3)
        {
            Notification.transform.localPosition = new Vector3(-900.0f, 265.4f, 0);
            Debug.Log("役員室に移動しました。");
            n = 4;
        }
        else if (n == 4)
        {
            Notification.transform.localPosition = new Vector3(-258.8f, 444.7f, 0);
            Debug.Log("総務部に移動しました。");
            n = 0;
        }
          ImageCommand.SetActive(false);
          ButtonNext.SetActive(true);
    }


    //反時計回りに部署移動
    public void MoveLeft()
    {

        if (n == 2)
        {
            Notification.transform.localPosition = new Vector3(381.2f, 265.4f, 0);
            Debug.Log("経理部に移動しました。");
            n = 1;
        }
        else if (n == 3)
        {
            Notification.transform.localPosition = new Vector3(381.2f, -35.4f, 0);
            Debug.Log("営業部に移動しました。");
            n = 2;
        }
        else if (n == 4)
        {
            Notification.transform.localPosition = new Vector3(-900.0f, -35.4f, 0);
            Debug.Log("サービス室に移動しました。");
            n = 3;
        }
        else if (n == 0)
        {
            Notification.transform.localPosition = new Vector3(-900.0f, 265.4f, 0);
            Debug.Log("役員室に移動しました。");
            n = 4;
        }
        else if (n == 1)
        {
            Notification.transform.localPosition = new Vector3(-258.8f, 444.7f, 0);
            Debug.Log("総務部に移動しました。");
            n = 0;
        }
        ImageCommand.SetActive(false);
        ButtonNext.SetActive(true);
    }





    public void RandomCard()
    {
        for (int i = start; i <= end; i++)
        {
            numbers.Add(i);
        }
        int j = 0;
        while (numbers.Count > 0)
        {
            int index = Random.Range(0, numbers.Count);
            int ransu = numbers[index];
            randomcard[j] = ransu;
            j++;
            Debug.Log(ransu);
            numbers.RemoveAt(index);
        }
        CardSet();
    }


    public void CardSet()
    {
        for (int i = 0; i <= 9; i++)
        {
            if (randomcard[i] == 1)
            {
                card[i] = "term0";
            }
            else
            {
                if (randomcard[i] == 2)
                {
                    card[i] = "term2";
                }
                else
                {
                    if (randomcard[i] == 3)
                    {
                        card[i] = "term3";
                    }
                    else
                    {
                        if (randomcard[i] == 4)
                        {
                            card[i] = "term4";
                        }
                        else
                        {
                            if (randomcard[i] == 5)
                            {
                                card[i] = "term5";
                            }
                            else
                            {
                                if (randomcard[i] == 6)
                                {
                                    card[i] = "term6";
                                }
                                else
                                {
                                    if (randomcard[i] == 7)
                                    {
                                        card[i] = "eve0";
                                    }
                                    else
                                    {
                                        if (randomcard[i] == 8)
                                        {
                                            card[i] = "eve1";
                                        }
                                        else
                                        {
                                            if (randomcard[i] == 9)
                                            {
                                                card[i] = "eve2";
                                            }
                                            else
                                            {
                                                card[i] = "eve3";
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

}
